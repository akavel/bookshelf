module com.akavel.bookshelf.yetimain;

import android.content.Context;
import android.database.Cursor;
import android.os.Bundle;
import android.support.v4.app.FragmentActivity;
import android.util.AttributeSet;
import android.view.Gravity;
import android.view.Menu;
import android.view.View;
import android.view.ViewGroup;
import android.view.ViewGroup$LayoutParams;
import android.widget.BaseAdapter;
import android.widget.Button;
import android.widget.LinearLayout;
import android.widget.LinearLayout$LayoutParams;
import android.widget.ListView;
import android.widget.TextView;
import android.R$style;
import android.graphics.Typeface;
import android.text.TextUtils$TruncateAt;

load com.akavel.bookshelf.scanbooks;
load com.akavel.bookshelf.layout;
load com.akavel.utils;

typedef layoutParam = Fixed number | FillParent () | WrapContent ();
layoutParams w h is layoutParam -> layoutParam -> ~ViewGroup$LayoutParams = (
	encode = \case of
		FillParent (): ViewGroup$LayoutParams#FILL_PARENT;
		WrapContent (): ViewGroup$LayoutParams#WRAP_CONTENT;
		Fixed n: n
		esac;
	new ViewGroup$LayoutParams(encode w, encode h)
	);

class BookView(Book book, Context context, AttributeSet attrs) extends MainLayout(context, attrs)
	title = new TextView(context),
	author = new TextView(context),
	path = new TextView(context),
	button = new Button(context),

	singleLineEllipsize v e is ~TextView -> 'a -> () =
		v#setLines(1);
		v#setMaxLines(1);
		v#setSingleLine();
		v#setEllipsize(case e of
			End (): TextUtils$TruncateAt#END;
			Start (): TextUtils$TruncateAt#START
			esac);
		(),
	
	margin = context#getResources()
		#getDimensionPixelSize(R$dimen#activity_horizontal_margin),

	linearParams w h margin gravity =
		param = new LinearLayout$LayoutParams(layoutParams w h);
		param#setMargins(margin, 0, margin, 0);
		param#gravity := gravity;
		param,

	layout _ =
		subh = new MainLayout(context, ());
		subhv = new MainLayout(context, ());
		
		this#setVertical();
		subh#setHorizontal();
		subhv#setVertical();
		
		title#setTextAppearance(context, R$style#TextAppearance_Large);
		title#setTypeface(Typeface#DEFAULT_BOLD);
		title#setEllipsize(TextUtils$TruncateAt#END);
		singleLineEllipsize title (End ());
		
		author#setTextAppearance(context, R$style#TextAppearance_Medium);
		author#setEllipsize(TextUtils$TruncateAt#END);
		singleLineEllipsize author (End ());
		
		path#setTextAppearance(context, R$style#TextAppearance_Small);
		path#setEllipsize(TextUtils$TruncateAt#START);
		singleLineEllipsize path (Start ());
		
		button#setText("(^)");
		
		this#addView(title, mainLayoutParams (Fixed ()));
		//this#addView(title,
		//	linearParams (WrapContent ()) (WrapContent ()) margin Gravity#LEFT);
		this#addView(subh, mainLayoutParams (Fixed ()));
		//this#addView(subh,
		//	linearParams (FillParent ()) (WrapContent ()) 0 Gravity#LEFT);
		subh#addView(subhv, mainLayoutParams (Shy ()));
		subh#addView(button, mainLayoutParams (Fixed ()));
		//subh#addView(subhv,
		//	linearParams (WrapContent ()) (WrapContent ()) 0 Gravity#LEFT);
		////subh#addView(button,
		////	linearParams (WrapContent ()) (WrapContent ()) 0 Gravity#RIGHT);
		subhv#addView(author, mainLayoutParams (Fixed ()));
		//subhv#addView(author,
		//	linearParams (WrapContent ()) (WrapContent ()) margin Gravity#LEFT);
		subhv#addView(path, mainLayoutParams (Fixed ()));
		//subhv#addView(path,
		//	linearParams (WrapContent ()) (WrapContent ()) margin Gravity#RIGHT);
		(),
	
	update book is ~Book -> () =
		if not nullptr? book then
			title#setText(book#title);
			author#setText(book#author);
			path#setText(book#path);
		fi,

	_ = 
		layout ();
		update book,

	void update(Book book)
		update book,
end;


class BooksDataAdapter(Cursor cursor) extends BaseAdapter
	var cursor = cursor,
	int getCount()
		cursor#getCount(),
	Object getItem(int pos)
		if cursor#moveToPosition(pos) then
			new Book(cursor#getString(0), cursor#getString(1), cursor#getString(2))
		fi,
	long getItemId(int pos)
		if cursor#moveToPosition(pos) then
			cursor#getLong(3)
		else
			-1
		fi,
	int getItemViewType(int pos) 0,
	View getView(int pos, View convertView, ViewGroup parent)
		book = (this#getItem(pos) unsafely_as ~Book);
		view = (convertView unsafely_as ~BookView);
		if nullptr? book then
			()
		elif nullptr? view then
			new BookView(book, parent#getContext(), ())
		else
			view#update(book);
			view
		fi,
	int getViewTypeCount() 1,
	boolean hasStableIds() true,
	boolean isEmpty()
		this#getCount() == 0,
	boolean areAllItemsEnabled() true,
	boolean isEnabled(int pos) true,
	
	void requery()
		_ = cursor#requery(),  //FIXME: this method is deprecated
end;

class MainActivity extends FragmentActivity
	appName _ = this#getResources()#getString(R$string#app_name),
	
	void onCreate(Bundle state)
		super#onCreate(state);
		
		layout = new MainLayout(this, ());
		
		pages1 = new PageSelectorView(this, ());
		layout#addView(pages1, mainLayoutParams (Fixed ()));
		
		lifted = new ListView(this);
		layout#addView(lifted, mainLayoutParams (Greedy ()));

		tabs = new TabChoiceView(this, ());
		layout#addView(tabs, mainLayoutParams (Fixed ()));
		
		shelf = new ListView(this);
		layout#addView(shelf, mainLayoutParams (Shy ()));
		
		pages2 = new PageSelectorView(this, ());
		layout#addView(pages2, mainLayoutParams (Fixed ()));

		pages1#link(lifted);
		pages2#link(shelf);

		this#setContentView(layout, layoutParams (FillParent ()) (FillParent ()));
		
		storage = new BooksStorage(this#getBaseContext());

		shelfAdapter = new BooksDataAdapter(storage#openCursor(0));
		//shelf#setAdapter(shelfAdapter);
		_ = (scanBooksTask this do progress:
			shelfAdapter#requery();
			shelfAdapter#notifyDataSetChanged();
			this#setTitle("\(appName ()): scanned \(progress) book(s)")
		done) #execute([]);
		
		tabs#addOnTabChangedListener((class L extends TabChoiceView$OnTabChangedListener
			void onTabChanged(int i)
				shelf#setAdapter(new BooksDataAdapter(storage#openCursor(i)))
			end;
			new L()));
		
		lifted#setAdapter(new BooksDataAdapter(storage#openCursor(-1)));
		
		(),

	boolean onCreateOptionsMenu(Menu menu)
		this#getMenuInflater()#inflate(R$menu#main, menu);
		true,
end;
