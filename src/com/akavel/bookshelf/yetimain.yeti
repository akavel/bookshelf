module com.akavel.bookshelf.yetimain;

import android.content.Context;
import android.database.Cursor;
import android.os.Bundle;
import android.support.v4.app.FragmentActivity;
import android.util.AttributeSet;
import android.view.LayoutInflater;
import android.view.Menu;
import android.view.View;
import android.view.ViewGroup;
import android.widget.BaseAdapter;
import android.widget.LinearLayout;
import android.widget.ListView;
import android.widget.TextView;

import com.akavel.bookshelf.CustomLayout;
import com.akavel.bookshelf.CustomLayout$LayoutParams;

load com.akavel.bookshelf.scanbooks;
load com.akavel.utils;

class BookView(Book book, Context context, AttributeSet attrs) extends LinearLayout(context, attrs)
	self _ = this,
	setText id text is number -> string -> () = (viewById this id unsafely_as ~TextView)#setText(text),
	
	_ = (context#getSystemService(Context#LAYOUT_INFLATER_SERVICE) unsafely_as ~LayoutInflater)
			#inflate(R$layout#layout_book, self ());
		(self ()) #update(book),
	void update(Book book)
		if not nullptr? book then
			setText R$id#title book#title;
			setText R$id#author book#author;
			setText R$id#path book#path
		fi,
end;


class BooksDataAdapter(Cursor cursor) extends BaseAdapter
	var cursor = cursor,
	int getCount()
		cursor#getCount(),
	Object getItem(int pos)
		if cursor#moveToPosition(pos) then
			new Book(cursor#getString(0), cursor#getString(1), cursor#getString(2))
		fi,
	long getItemId(int pos)
		if cursor#moveToPosition(pos) then
			cursor#getLong(3)
		else
			-1
		fi,
	int getItemViewType(int pos) 0,
	View getView(int pos, View convertView, ViewGroup parent)
		book = (this#getItem(pos) unsafely_as ~Book);
		view = (convertView unsafely_as ~BookView);
		if nullptr? book then
			()
		elif nullptr? view then
			new BookView(book, parent#getContext(), ())
		else
			view#update(book);
			view
		fi,
	int getViewTypeCount() 1,
	boolean hasStableIds() true,
	boolean isEmpty()
		this#getCount() == 0,
	boolean areAllItemsEnabled() true,
	boolean isEnabled(int pos) true,
	
	void requery()
		_ = cursor#requery(),  //FIXME: this method is deprecated
end;

// utils:
// resolveSizeAndState(): given desired size, and external initial query, and "too small" flags from children, raises "too small" flag in result if necessary
// protected getSuggestedMinimumHeight()/Width() -- ??
// getVirtualChildCount(), getVirtualChildAt(i)
// child.getLayoutParams()
// child.getVisibility() == GONE
// child.measure(...)
// child.getMeasuredWidth()/Height()
// childState = combineMeasuredStates(childState, child.getMeasuredState())
// setMeasuredDimension(resolveSizeAndState(...), ...)
// measureChildWithMargins(...) - given original ViewGroups measureSpecs, and internal "used space" inside ViewGroup, let child measure itself
// child.layout(...)

//class MainLayout(Context context, AttributeSet attrs) extends ViewGroup(context, attrs)
//    // Any layout manager that doesn't scroll will want this.
//	boolean shouldDelayChildPressedState() false,
//	
//	// Ask all children to measure themselves and compute the measurement of this
//	// layout based on the children.
//	//void onMeasure(int widthMeasureSpec, int heightMeasureSpec)
//
//	// Position all children within this layout.
//	//void onLayout(boolean changed, int l, int t, int r, int b)
//		/*
//Called from layout when this view should assign a size and position to each of its children. Derived classes with children should override this method and call layout on each of their children.
//Parameters
//changed 	This is a new size or position for this view
//l 	Left position, relative to parent
//t 	Top position, relative to parent
//r 	Right position, relative to parent
//b 	Bottom position, relative to parent 
//		*/
//end;

import com.akavel.bookshelf.ScanBooksTask$OnProgressListener;

class MainActivity extends FragmentActivity
	appName _ = this#getResources()#getString(R$string#app_name),
	
	void onCreate(Bundle state)
		super#onCreate(state);
		// WIP: starting with some sample how to build layout programmatically
		// http://stackoverflow.com/a/4979362/98528
		layout = new CustomLayout(this, ());

		text = new TextView(this);
		text#setText("Test");
		
		textParams = new CustomLayout$LayoutParams(
			CustomLayout$LayoutParams#WRAP_CONTENT, CustomLayout$LayoutParams#WRAP_CONTENT);
		//textParams#addRule(CustomLayout#CENTER_IN_PARENT);
		
		text#setLayoutParams(textParams);
		layout#addView(text);
		
		text2 = new TextView(this);
		text2#setText("test 2");
		layout#addView(text2, textParams);
		
		shelf = new ListView(this);
		layout#addView(shelf, new CustomLayout$LayoutParams(
			CustomLayout$LayoutParams#FILL_PARENT, CustomLayout$LayoutParams#WRAP_CONTENT));
//			CustomLayout$LayoutParams#FILL_PARENT, CustomLayout$LayoutParams#FILL_PARENT));
		
		layoutParams = new CustomLayout$LayoutParams(
			CustomLayout$LayoutParams#FILL_PARENT, CustomLayout$LayoutParams#FILL_PARENT);
		this#setContentView(layout, layoutParams);
		
		shelfAdapter = new BooksDataAdapter(new BooksStorage(this#getBaseContext())#openCursor(0));
		shelf#setAdapter(shelfAdapter);
		_ = (scanBooksTask this do progress:
			shelfAdapter#requery();
			shelfAdapter#notifyDataSetChanged();
			this#setTitle("\(appName ()): scanned \(progress) book(s)")
		done) #execute([]);
		
		(),

	boolean onCreateOptionsMenu(Menu menu)
		this#getMenuInflater()#inflate(R$menu#main, menu);
		true,
end;
